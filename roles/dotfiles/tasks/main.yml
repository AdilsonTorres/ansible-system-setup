- name: check for dotfiles
  stat: path=~/.config/dotfiles-git-dir
  register: dotfiles_config_file

# we must not try cloning the repo if it already exists, because the
# installation script ran in the next task transforms it and ansible
# would be confused.
- name: clone dotfiles
  git:
    repo: "git://github.com/janek-warchol/my-dotfiles"
    dest: ~/.dotfiles.git
    version: janek
    force: no
  when: dotfiles_config_file.stat.exists == false

- name: install dotfiles
  shell: >
    ~/.dotfiles.git/.install-dotfiles.sh
    creates=~/.config/dotfiles-git-dir
  when: dotfiles_config_file.stat.exists == false

# provide some basic config of the repo (most importantly remotes),
# but don't overwrite changes made later (such as new branch info).
- name: install dotfiles git repo configuration
  copy:
    src: dotfiles-repo-config
    dest: ~/.dotfiles.git/config
    force: no

- name: install user-specific git configuration
  copy:
    src: gitconfig-{{ ansible_env.USER }}
    dest: ~/.config/git/user-specific-config
    backup: yes
  when: ansible_env.USER != "vagrant"