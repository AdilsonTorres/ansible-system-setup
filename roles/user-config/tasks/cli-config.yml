
  # I prefer not to keep my keys etc. in ~/.ssh, because one day
  # I may forget to copy it when moving from one computer to another...
- name: put ssh directory together with my other data
  command: >
    mv -n ~/.ssh {{ ssh_home }}
    creates={{ ssh_home }}

- name: create links to ~/.ssh
  file:
    src: "{{ ssh_home }}"
    dest: "{{ item }}"
    state: link
    force: no
  with_items:
    - ~/.ssh   # for all software that looks there by default
    - ~/.config/ssh   # I like to see ssh when I'm browsing .config
  when: item != ssh_home   # in case ssh_home is set to one of the above

- name: ensure only I can acess my ssh directory
  file:
    path: "{{ ssh_home }}"
    state: directory
    recurse: yes
    mode: og-rwx

- name: update ssh config
  copy:
    src: ssh-config-{{ config_variant }}
    dest: "{{ ssh_home }}/config"
    backup: yes

- name: add my keys to authorized keys
  lineinfile:
    dest: "{{ ssh_home }}/authorized_keys"
    line: "{{ item }}"
    create: yes
  with_items:
    - "{{ id_rsa_personal_2c6819cb_public_key }}"
    - "{{ id_rsa_codilime_5260631d_public_key }}"

- name: install user-specific git configuration
  template:
    src: git-config-local.j2
    dest: ~/.config/git/config.local
    backup: yes

- name: update ansible-system-setup remote
  lineinfile:
    dest: ~/.config/ansible-system-setup/.git/config
    regexp: url = .*ansible-system-setup
    line: "	url = {{ this_repo_remote }}"

  # I don't want to accidentally commit something with my work email.
- name: override git authorship setting in ansible-system-setup
  blockinfile:
    dest: ~/.config/ansible-system-setup/.git/config
    block: |
      [user]
      	name = Jan Warcho≈Ç
      	email = jan.warchol@gmail.com
  when: inventory_hostname in groups.work_computers
