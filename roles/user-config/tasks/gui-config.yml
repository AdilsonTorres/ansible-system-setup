- name: create XDG and other directories
  file:
    path: "{{ ansible_env.HOME }}/{{ item }}"
    state: directory
  with_items:
    - "{{ xdg_documents_dir }}"
    - "{{ xdg_music_dir }}"
    - "{{ xdg_pictures_dir }}"
    - "{{ xdg_videos_dir }}"
    - janek
    - repos
    - zasoby

- name: update user-dirs.dirs
  template:
    src: user-dirs.j2
    dest: ~/.config/user-dirs.dirs

- name: remove default XDG directories
  # cannot use file module because I want to delete only empty directories
  shell: >
    rmdir
    Desktop
    Documents
    Downloads
    Music
    Pictures
    Public
    Templates
    Videos
    Pulpit
    Dokumenty
    Pobrane
    Muzyka
    Obrazy
    Publiczne
    Szablony
    Wideo
  args:
    chdir: "{{ ansible_env.HOME }}"
  register: task_result
  changed_when: task_result.stderr == ''
  failed_when: '"Directory not empty" in task_result.stderr'

  # I prefer to keep installed fonts in another location
- name: update fonts directory location
  shell: >
    if [ -d ~/.fonts ]; then
        mv -n ~/.fonts ~/zasoby/czcionki
    else
        mkdir ~/zasoby/czcionki
    fi
    creates=~/zasoby/czcionki

- name: create link to ~/.fonts
  file:
    src: ~/zasoby/czcionki
    dest: ~/.fonts
    state: link
    force: no

- name: move config files to new locations
  shell: >
    if [ -e {{item.dest}} ]; then
        mv -n {{item.dest}} {{item.src}}
    else
        touch {{item.src}}
    fi
    creates={{item.src}}
  with_items: 
    - src: ~/janek/gtk-bookmarks
      dest: ~/.config/gtk-3.0/bookmarks
    - src: ~/janek/monitors.xml
      dest: ~/.config/monitors.xml
    - src: ~/janek/fasd
      dest: ~/.fasd
    - src: ~/janek/viminfo
      dest: ~/.viminfo

- name: create links to config files
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: hard
    force: yes
  with_items: 
    - src: ~/janek/gtk-bookmarks
      dest: ~/.config/gtk-3.0/bookmarks
    - src: ~/janek/monitors.xml
      dest: ~/.config/monitors.xml
    - src: ~/janek/fasd
      dest: ~/.fasd
    - src: ~/janek/viminfo
      dest: ~/.viminfo

- name: ensure .config/terminator directory exists
  file:
    path: ~/.config/terminator
    state: directory

- name: update Terminator configuration
  template:
    src: terminator-config.j2
    dest: ~/.config/terminator/config
    backup: yes

# gsettings needs access to dbus which is not ran by default when connected over SSH
# http://askubuntu.com/questions/276509/change-gsettings-without-running-x-and-unity
- name: set Terminator as default system terminal
  shell: >
    gsettings get org.cinnamon.desktop.default-applications.terminal exec;
    dbus-launch --exit-with-session \
    gsettings set org.cinnamon.desktop.default-applications.terminal exec 'terminator'
  register: previous_default
  changed_when: '"terminator" not in previous_default.stdout'

- name: disable Cinnamon login sound
  shell: >
    gsettings get org.cinnamon.sounds login-enabled;
    dbus-launch --exit-with-session \
    gsettings set org.cinnamon.sounds login-enabled 'false'
  register: previous_default
  changed_when: '"true" in previous_default.stdout'

- name: make nemo open scripts in editor by default
  shell: >
    gsettings get org.nemo.preferences executable-text-activation;
    dbus-launch --exit-with-session \
    gsettings set org.nemo.preferences executable-text-activation 'display'
  register: previous_default
  changed_when: '"display" not in previous_default.stdout'

- name: disable dimming the screen on battery
  shell: >
    gsettings get org.cinnamon.settings-daemon.plugins.power idle-dim-battery;
    dbus-launch --exit-with-session \
    gsettings set org.cinnamon.settings-daemon.plugins.power idle-dim-battery false;
  register: previous_default
  changed_when: '"true" in previous_default.stdout'
